{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar initialState = {\n  list: [],\n  pageNumber: 1\n};\n\nvar listReducer = function listReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"APPEND\":\n      var newData = action.payload.map(function (item) {\n        item.show = true;\n        return item;\n      });\n      return {\n        list: [].concat(_toConsumableArray(state.list), _toConsumableArray(newData)),\n        pageNumber: state.pageNumber + 1\n      };\n\n    case \"SEARCH\":\n      {\n        var _defaultSort = state.list;\n\n        _defaultSort.sort(function (a, b) {\n          return a.score > b.score ? 1 : -1;\n        });\n\n        return {\n          list: _defaultSort\n        };\n      }\n\n    case \"SORT\":\n      var sortedOnMembers = state.list;\n      sortedOnMembers.sort(function (a, b) {\n        return a.members > b.members ? 1 : -1;\n      });\n      return {\n        list: sortedOnMembers\n      };\n\n    case \"RESETFILTER\":\n      var defaultSort = state.list;\n      defaultSort.sort(function (a, b) {\n        return a.score > b.score ? 1 : -1;\n      });\n      return {\n        list: defaultSort\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/mnt/sdb7/AU/Classes/8-React-native/assignment/RNProject/ListRedux/listReducer.js"],"names":["initialState","list","pageNumber","listReducer","state","action","type","newData","payload","map","item","show","defaultSort","sort","a","b","score","sortedOnMembers","members"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,QAAL;AACE,UAAMC,OAAO,GAAGF,MAAM,CAACG,OAAP,CAAeC,GAAf,CAAmB,UAACC,IAAD,EAAU;AAC3CA,QAAAA,IAAI,CAACC,IAAL,GAAY,IAAZ;AACA,eAAOD,IAAP;AACD,OAHe,CAAhB;AAIA,aAAO;AACLT,QAAAA,IAAI,+BAAMG,KAAK,CAACH,IAAZ,sBAAqBM,OAArB,EADC;AAELL,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmB;AAF1B,OAAP;;AAMF,SAAK,QAAL;AAAe;AACb,YAAMU,YAAW,GAAGR,KAAK,CAACH,IAA1B;;AACAW,QAAAA,YAAW,CAACC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAApC;AAAA,SAAjB;;AACA,eAAO;AACLf,UAAAA,IAAI,EAAEW;AADD,SAAP;AAGD;;AAGD,SAAK,MAAL;AACE,UAAMK,eAAe,GAAGb,KAAK,CAACH,IAA9B;AACAgB,MAAAA,eAAe,CAACJ,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAWD,CAAC,CAACI,OAAF,GAAYH,CAAC,CAACG,OAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAxC;AAAA,OAArB;AACA,aAAO;AACLjB,QAAAA,IAAI,EAAEgB;AADD,OAAP;;AAKF,SAAK,aAAL;AACE,UAAML,WAAW,GAAGR,KAAK,CAACH,IAA1B;AACAW,MAAAA,WAAW,CAACC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAApC;AAAA,OAAjB;AACA,aAAO;AACLf,QAAAA,IAAI,EAAEW;AADD,OAAP;;AAIF;AACE,aAAOR,KAAP;AAtCJ;AAwCD,CAzCD;;AA2CA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  list: [],\n  pageNumber: 1,\n};\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // add new data at the end list\n    case \"APPEND\":\n      const newData = action.payload.map((item) => {\n        item.show = true; // adding one more property on basis we can show element\n        return item;\n      });\n      return {\n        list: [...state.list, ...newData],\n        pageNumber: state.pageNumber + 1,\n      };\n\n    // search on basis of text\n    case \"SEARCH\": {\n      const defaultSort = state.list;\n      defaultSort.sort((a, b) => (a.score > b.score ? 1 : -1));\n      return {\n        list: defaultSort,\n      };\n    }\n\n    // sort my members\n    case \"SORT\":\n      const sortedOnMembers = state.list;\n      sortedOnMembers.sort((a, b) => (a.members > b.members ? 1 : -1));\n      return {\n        list: sortedOnMembers,\n      };\n\n    // reset sorting and seach filter\n    case \"RESETFILTER\":\n      const defaultSort = state.list;\n      defaultSort.sort((a, b) => (a.score > b.score ? 1 : -1));\n      return {\n        list: defaultSort,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n"]},"metadata":{},"sourceType":"module"}