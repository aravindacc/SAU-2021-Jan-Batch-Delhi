{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar initialState = {\n  list: [],\n  pageNumber: 1\n};\n\nvar listReducer = function listReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"APPEND\":\n      return {\n        list: [].concat(_toConsumableArray(state.list), _toConsumableArray(action.payload)),\n        pageNumber: state.pageNumber + 1\n      };\n\n    case \"SORT\":\n      var list = state.list;\n      list.sort(function (a, b) {\n        return a.color > b.color ? 1 : -1;\n      });\n\n    case \"RESETFILTER\":\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/mnt/sdb7/AU/Classes/8-React-native/assignment/RNProject/ListRedux/listReducer.js"],"names":["initialState","list","pageNumber","listReducer","state","action","type","payload","sort","a","b","color"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO;AACLL,QAAAA,IAAI,+BAAMG,KAAK,CAACH,IAAZ,sBAAqBI,MAAM,CAACE,OAA5B,EADC;AAELL,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmB;AAF1B,OAAP;;AAKF,SAAK,MAAL;AACE,UAAMD,IAAI,GAAGG,KAAK,CAACH,IAAnB;AACAA,MAAAA,IAAI,CAACO,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAApC;AAAA,OAAV;;AAEF,SAAK,aAAL;AAEA;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  list: [],\n  pageNumber: 1,\n};\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"APPEND\":\n      return {\n        list: [...state.list, ...action.payload],\n        pageNumber: state.pageNumber + 1,\n      };\n\n    case \"SORT\":\n      const list = state.list;\n      list.sort((a, b) => (a.color > b.color ? 1 : -1));\n\n    case \"RESETFILTER\":\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n"]},"metadata":{},"sourceType":"module"}