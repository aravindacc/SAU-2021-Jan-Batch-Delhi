{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/TabbedHeader/defaultProps/defaultProps.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { string } from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { QuizListElement } from \"../../components\";\nimport { Brandon, Jennifer, Ewa } from \"../../../assets/data/cards\";\nimport styles from \"../TabbedHeader.styles\";\nimport { constants, sizes } from \"../../../constants\";\n\nvar RenderContent = function RenderContent(_ref) {\n  var title = _ref.title;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      contentHeight = _useState2[0],\n      setcontentHeight = _useState2[1];\n\n  var users = [Brandon, Jennifer, Ewa];\n\n  var onLayoutContent = function onLayoutContent(e) {\n    var contentHeightTmp = _objectSpread({}, contentHeight);\n\n    contentHeightTmp[title] = e.nativeEvent.layout.height;\n    setcontentHeight(_objectSpread({}, contentHeightTmp));\n  };\n\n  var calcMargin = function calcMargin() {\n    var marginBottom = 50;\n\n    if (contentHeight[title]) {\n      var padding = 24;\n      var isBigContent = constants.deviceHeight - contentHeight[title] < 0;\n\n      if (isBigContent) {\n        return marginBottom;\n      }\n\n      marginBottom = constants.deviceHeight - padding * 2 - sizes.headerHeight - contentHeight[title];\n      return marginBottom;\n    }\n\n    return marginBottom;\n  };\n\n  var marginBottom = Platform.select({\n    ios: calcMargin(title),\n    android: 0\n  });\n  return React.createElement(View, {\n    style: [styles.content, {\n      marginBottom: marginBottom\n    }],\n    onLayout: function onLayout(e) {\n      return onLayoutContent(e, title);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.contentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, title), users.map(function (user) {\n    return (title === 'Popular Quizes' || title === user.type) && React.createElement(QuizListElement, {\n      key: JSON.stringify(user),\n      elements: user.cardsAmount,\n      authorName: user.author,\n      mainText: user.label,\n      labelText: user.type,\n      imageSource: user.image,\n      onPress: function onPress() {},\n      pressUser: function pressUser() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nRenderContent.propTypes = {\n  title: string\n};\nRenderContent.defaultProps = {\n  title: 'Popular Quizes'\n};\nexport default RenderContent;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/TabbedHeader/defaultProps/defaultProps.js"],"names":["React","useState","string","QuizListElement","Brandon","Jennifer","Ewa","styles","constants","sizes","RenderContent","title","contentHeight","setcontentHeight","users","onLayoutContent","e","contentHeightTmp","nativeEvent","layout","height","calcMargin","marginBottom","padding","isBigContent","deviceHeight","headerHeight","Platform","select","ios","android","content","contentText","map","user","type","JSON","stringify","cardsAmount","author","label","image","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { string } from 'prop-types';\nimport { View, Text, Platform } from 'react-native';\nimport { QuizListElement } from '../../components';\nimport { Brandon, Jennifer, Ewa } from '../../../assets/data/cards';\nimport styles from '../TabbedHeader.styles';\nimport { constants, sizes } from '../../../constants';\n\nconst RenderContent = ({ title }) => {\n  const [contentHeight, setcontentHeight] = useState({});\n  const users = [Brandon, Jennifer, Ewa];\n\n  const onLayoutContent = (e) => {\n    const contentHeightTmp = { ...contentHeight };\n    contentHeightTmp[title] = e.nativeEvent.layout.height;\n\n    setcontentHeight({ ...contentHeightTmp });\n  };\n\n  const calcMargin = () => {\n    let marginBottom = 50;\n\n    if (contentHeight[title]) {\n      const padding = 24;\n      const isBigContent = constants.deviceHeight - contentHeight[title] < 0;\n\n      if (isBigContent) {\n        return marginBottom;\n      }\n\n      marginBottom =\n        constants.deviceHeight - padding * 2 - sizes.headerHeight - contentHeight[title];\n\n      return marginBottom;\n    }\n\n    return marginBottom;\n  };\n  const marginBottom = Platform.select({ ios: calcMargin(title), android: 0 });\n\n  return (\n    <View style={[styles.content, { marginBottom }]} onLayout={(e) => onLayoutContent(e, title)}>\n      <Text style={styles.contentText}>{title}</Text>\n      {users.map(\n        (user) =>\n          (title === 'Popular Quizes' || title === user.type) && (\n            <QuizListElement\n              key={JSON.stringify(user)}\n              elements={user.cardsAmount}\n              authorName={user.author}\n              mainText={user.label}\n              labelText={user.type}\n              imageSource={user.image}\n              onPress={() => {}}\n              pressUser={() => {}}\n            />\n          )\n      )}\n    </View>\n  );\n};\n\nRenderContent.propTypes = {\n  title: string,\n};\n\nRenderContent.defaultProps = {\n  title: 'Popular Quizes',\n};\n\nexport default RenderContent;\n"]},"metadata":{},"sourceType":"module"}