{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/components/ScrollableTabBar/ScrollableTabBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { arrayOf, func, number, object, shape, string, element, oneOfType } from 'prop-types';\nimport { constants } from \"../../constants\";\nimport styles from \"./ScrollableTabBar.styles\";\nvar UNDERLINE_PADDING = 16;\n\nvar ScrollableTabBar = function (_React$PureComponent) {\n  _inherits(ScrollableTabBar, _React$PureComponent);\n\n  var _super = _createSuper(ScrollableTabBar);\n\n  function ScrollableTabBar(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollableTabBar);\n\n    _this = _super.call(this, props);\n\n    _this.adjustPrevious = function (page) {\n      var lastHidden = Math.floor(_this.currentXPosition / (constants.deviceWidth * 0.3));\n\n      if (page <= lastHidden) {\n        _this.currentXPosition = constants.deviceWidth * 0.3 * page;\n\n        _this.scrollView.scrollTo({\n          x: _this.currentXPosition\n        });\n      }\n    };\n\n    _this.adjustNext = function (page) {\n      var invisibleX = constants.deviceWidth + _this.currentXPosition - constants.deviceWidth * 0.3 * (page + 1);\n\n      if (invisibleX < 0) {\n        _this.currentXPosition = _this.currentXPosition - invisibleX;\n\n        _this.scrollView.scrollTo({\n          x: _this.currentXPosition\n        });\n      }\n    };\n\n    _this.scrollToTab = function (page) {\n      var tabs = _this.props.tabs;\n\n      if (tabs.length > 3) {\n        if (page === 0) {\n          _this.scrollView.scrollTo({\n            x: 0\n          });\n\n          _this.currentXPosition = 0;\n        } else if (page !== tabs.length - 1) {\n          _this.adjustPrevious(page - 1);\n\n          _this.adjustNext(page + 1);\n        } else {\n          _this.scrollView.scrollToEnd();\n\n          _this.currentXPosition = constants.deviceWidth * 0.3 * tabs.length - constants.deviceWidth;\n        }\n      }\n    };\n\n    _this.goToPage = function (page) {\n      var goToPage = _this.props.goToPage;\n\n      _this.scrollToTab(page);\n\n      return goToPage(page);\n    };\n\n    _this.renderIcon = function (icon, page) {\n      var activeTab = _this.props.activeTab;\n      var isActive = activeTab === page;\n\n      if (typeof icon === 'function') {\n        return icon(isActive);\n      }\n\n      return icon;\n    };\n\n    _this.currentXPosition = 0;\n    _this.state = {\n      tabUnderlineWidth: props.tabs.map(function (_) {\n        return 0;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(ScrollableTabBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var activeTab = this.props.activeTab;\n\n      if (prevProps.activeTab !== activeTab) {\n        this.scrollToTab(activeTab);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          activeTab = _this$props.activeTab,\n          scrollValue = _this$props.scrollValue,\n          tabs = _this$props.tabs,\n          tabTextStyle = _this$props.tabTextStyle,\n          tabTextActiveStyle = _this$props.tabTextActiveStyle,\n          tabTextContainerStyle = _this$props.tabTextContainerStyle,\n          tabTextContainerActiveStyle = _this$props.tabTextContainerActiveStyle,\n          tabsContainerBackgroundColor = _this$props.tabsContainerBackgroundColor,\n          tabWrapperStyle = _this$props.tabWrapperStyle,\n          tabsContainerStyle = _this$props.tabsContainerStyle;\n      var tabUnderlineWidth = this.state.tabUnderlineWidth;\n      var tabWidth = tabs.length > 3 ? constants.deviceWidth * 0.3 : constants.deviceWidth * 0.33;\n      var tabUnderlineStyle = {\n        position: 'absolute',\n        width: tabUnderlineWidth[activeTab] + 2 * UNDERLINE_PADDING,\n        marginLeft: (tabWidth - tabUnderlineWidth[activeTab] - 2 * UNDERLINE_PADDING) / 2,\n        marginRight: (tabWidth - tabUnderlineWidth[activeTab] - 2 * UNDERLINE_PADDING) / 2,\n        bottom: 0,\n        borderRadius: 6,\n        height: 3\n      };\n      var translateX = scrollValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, tabWidth]\n      });\n      return React.createElement(View, {\n        style: [styles.container, {\n          backgroundColor: tabsContainerBackgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.nestedStyle,\n        contentContainerStyle: [styles.contentContainer, tabsContainerStyle],\n        ref: function ref(r) {\n          return _this2.scrollView = r;\n        },\n        onScrollEndDrag: function onScrollEndDrag(event) {\n          return _this2.currentXPosition = event.nativeEvent.contentOffset.x;\n        },\n        vertical: false,\n        horizontal: true,\n        bounces: false,\n        showsHorizontalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, tabs.map(function (tab, page) {\n        var isTabActive = activeTab === page;\n        var tabKey = tab.title || \"tab \" + page;\n        return React.createElement(TouchableOpacity, {\n          key: tabKey,\n          accessible: true,\n          style: tabWrapperStyle,\n          accessibilityLabel: tabKey,\n          accessibilityTraits: \"button\",\n          activeOpacity: 0.9,\n          onPress: function onPress() {\n            return _this2.goToPage(page);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.tabContainer, tabTextContainerStyle, isTabActive && tabTextContainerActiveStyle],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }\n        }, _this2.renderIcon(tab.icon, page), tab.title && React.createElement(Text, {\n          onLayout: function onLayout(_ref) {\n            var width = _ref.nativeEvent.layout.width;\n\n            var newWidth = _toConsumableArray(tabUnderlineWidth);\n\n            newWidth[page] = width;\n\n            _this2.setState({\n              tabUnderlineWidth: newWidth\n            });\n          },\n          style: [styles.tabText, tabTextStyle, isTabActive && tabTextActiveStyle],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }\n        }, tab.title)));\n      }), React.createElement(Animated.View, {\n        style: [tabUnderlineStyle, {\n          transform: [{\n            translateX: translateX\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ScrollableTabBar;\n}(React.PureComponent);\n\nScrollableTabBar.propTypes = {\n  activeTab: number,\n  goToPage: func,\n  scrollValue: object,\n  tabs: arrayOf(shape({\n    content: element,\n    title: string,\n    icon: oneOfType([element, func])\n  })),\n  tabTextStyle: shape({}),\n  tabTextActiveStyle: shape({}),\n  tabTextContainerStyle: shape({}),\n  tabTextContainerActiveStyle: shape({}),\n  tabsContainerBackgroundColor: string,\n  tabWrapperStyle: ViewPropTypes.style,\n  tabsContainerStyle: ViewPropTypes.style\n};\nexport default ScrollableTabBar;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/components/ScrollableTabBar/ScrollableTabBar.js"],"names":["React","ViewPropTypes","arrayOf","func","number","object","shape","string","element","oneOfType","constants","styles","UNDERLINE_PADDING","ScrollableTabBar","props","adjustPrevious","page","lastHidden","Math","floor","currentXPosition","deviceWidth","scrollView","scrollTo","x","adjustNext","invisibleX","scrollToTab","tabs","length","scrollToEnd","goToPage","renderIcon","icon","activeTab","isActive","state","tabUnderlineWidth","map","_","prevProps","scrollValue","tabTextStyle","tabTextActiveStyle","tabTextContainerStyle","tabTextContainerActiveStyle","tabsContainerBackgroundColor","tabWrapperStyle","tabsContainerStyle","tabWidth","tabUnderlineStyle","position","width","marginLeft","marginRight","bottom","borderRadius","height","translateX","interpolate","inputRange","outputRange","container","backgroundColor","nestedStyle","contentContainer","r","event","nativeEvent","contentOffset","tab","isTabActive","tabKey","title","tabContainer","layout","newWidth","setState","tabText","transform","PureComponent","propTypes","content","style"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-return-assign */\nimport React from 'react';\nimport { Animated, Text, TouchableOpacity, View, ScrollView, ViewPropTypes } from 'react-native';\nimport { arrayOf, func, number, object, shape, string, element, oneOfType } from 'prop-types';\nimport { constants } from '../../constants';\nimport styles from './ScrollableTabBar.styles';\n\nconst UNDERLINE_PADDING = 16;\n\nclass ScrollableTabBar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.currentXPosition = 0;\n    this.state = {\n      tabUnderlineWidth: props.tabs.map((_) => 0),\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { activeTab } = this.props;\n    if (prevProps.activeTab !== activeTab) {\n      this.scrollToTab(activeTab);\n    }\n  }\n\n  adjustPrevious = (page) => {\n    const lastHidden = Math.floor(this.currentXPosition / (constants.deviceWidth * 0.3));\n    if (page <= lastHidden) {\n      this.currentXPosition = constants.deviceWidth * 0.3 * page;\n      this.scrollView.scrollTo({\n        x: this.currentXPosition,\n      });\n    }\n  };\n\n  adjustNext = (page) => {\n    // eslint-disable-next-line max-len\n    const invisibleX =\n      constants.deviceWidth + this.currentXPosition - constants.deviceWidth * 0.3 * (page + 1);\n\n    if (invisibleX < 0) {\n      this.currentXPosition = this.currentXPosition - invisibleX;\n      this.scrollView.scrollTo({\n        x: this.currentXPosition,\n      });\n    }\n  };\n\n  scrollToTab = (page) => {\n    const { tabs } = this.props;\n\n    if (tabs.length > 3) {\n      if (page === 0) {\n        this.scrollView.scrollTo({\n          x: 0,\n        });\n        this.currentXPosition = 0;\n      } else if (page !== tabs.length - 1) {\n        this.adjustPrevious(page - 1);\n        this.adjustNext(page + 1);\n      } else {\n        this.scrollView.scrollToEnd();\n        this.currentXPosition = constants.deviceWidth * 0.3 * tabs.length - constants.deviceWidth;\n      }\n    }\n  };\n\n  goToPage = (page) => {\n    const { goToPage } = this.props;\n    this.scrollToTab(page);\n\n    return goToPage(page);\n  };\n\n  renderIcon = (icon, page) => {\n    const { activeTab } = this.props;\n    const isActive = activeTab === page;\n    if (typeof icon === 'function') {\n      return icon(isActive);\n    }\n\n    return icon;\n  };\n\n  render() {\n    const {\n      activeTab,\n      scrollValue,\n      tabs,\n      tabTextStyle,\n      tabTextActiveStyle,\n      tabTextContainerStyle,\n      tabTextContainerActiveStyle,\n      tabsContainerBackgroundColor,\n      tabWrapperStyle,\n      tabsContainerStyle,\n    } = this.props;\n    const { tabUnderlineWidth } = this.state;\n\n    const tabWidth = tabs.length > 3 ? constants.deviceWidth * 0.3 : constants.deviceWidth * 0.33;\n\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: tabUnderlineWidth[activeTab] + 2 * UNDERLINE_PADDING,\n      marginLeft: (tabWidth - tabUnderlineWidth[activeTab] - 2 * UNDERLINE_PADDING) / 2,\n      marginRight: (tabWidth - tabUnderlineWidth[activeTab] - 2 * UNDERLINE_PADDING) / 2,\n      bottom: 0,\n      borderRadius: 6,\n      height: 3,\n    };\n\n    const translateX = scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, tabWidth],\n    });\n\n    return (\n      <View\n        style={[\n          styles.container,\n          {\n            backgroundColor: tabsContainerBackgroundColor,\n          },\n        ]}>\n        <ScrollView\n          style={styles.nestedStyle}\n          contentContainerStyle={[styles.contentContainer, tabsContainerStyle]}\n          ref={(r) => (this.scrollView = r)}\n          onScrollEndDrag={(event) => (this.currentXPosition = event.nativeEvent.contentOffset.x)}\n          vertical={false}\n          horizontal\n          bounces={false}\n          showsHorizontalScrollIndicator={false}>\n          {tabs.map((tab, page) => {\n            const isTabActive = activeTab === page;\n            const tabKey = tab.title || `tab ${page}`;\n\n            return (\n              <TouchableOpacity\n                key={tabKey}\n                accessible\n                style={tabWrapperStyle}\n                accessibilityLabel={tabKey}\n                accessibilityTraits=\"button\"\n                activeOpacity={0.9}\n                onPress={() => this.goToPage(page)}>\n                <View\n                  style={[\n                    styles.tabContainer,\n                    tabTextContainerStyle,\n                    isTabActive && tabTextContainerActiveStyle,\n                  ]}>\n                  {this.renderIcon(tab.icon, page)}\n                  {tab.title && (\n                    <Text\n                      // eslint-disable-next-line no-return-assign\n                      onLayout={({\n                        nativeEvent: {\n                          layout: { width },\n                        },\n                      }) => {\n                        const newWidth = [...tabUnderlineWidth];\n                        newWidth[page] = width;\n                        this.setState({\n                          tabUnderlineWidth: newWidth,\n                        });\n                      }}\n                      style={[styles.tabText, tabTextStyle, isTabActive && tabTextActiveStyle]}>\n                      {tab.title}\n                    </Text>\n                  )}\n                </View>\n              </TouchableOpacity>\n            );\n          })}\n          <Animated.View\n            style={[\n              tabUnderlineStyle,\n              {\n                transform: [\n                  {\n                    translateX,\n                  },\n                ],\n              },\n            ]}\n          />\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nScrollableTabBar.propTypes = {\n  activeTab: number,\n  goToPage: func,\n  scrollValue: object,\n  tabs: arrayOf(shape({ content: element, title: string, icon: oneOfType([element, func]) })),\n  tabTextStyle: shape({}),\n  tabTextActiveStyle: shape({}),\n  tabTextContainerStyle: shape({}),\n  tabTextContainerActiveStyle: shape({}),\n  tabsContainerBackgroundColor: string,\n  tabWrapperStyle: ViewPropTypes.style,\n  tabsContainerStyle: ViewPropTypes.style,\n};\nexport default ScrollableTabBar;\n"]},"metadata":{},"sourceType":"module"}