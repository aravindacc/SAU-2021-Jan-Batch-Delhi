{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/DetailsHeader/DetailsHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { bool, number, func, string } from 'prop-types';\nimport StickyParallaxHeader from \"../../index\";\nimport { constants, sizes } from \"../../constants\";\nimport { Brandon } from \"../../assets/data/cards\";\nimport styles from \"./DetailsHeader.styles\";\nimport { renderContent } from \"./defaultProps/defaultProps\";\nvar event = Animated.event,\n    ValueXY = Animated.ValueXY;\n\nvar DetailsHeader = function (_React$Component) {\n  _inherits(DetailsHeader, _React$Component);\n\n  var _super = _createSuper(DetailsHeader);\n\n  function DetailsHeader(props) {\n    var _this;\n\n    _classCallCheck(this, DetailsHeader);\n\n    _this = _super.call(this, props);\n\n    _this.setHeaderSize = function (headerLayout) {\n      return _this.setState({\n        headerLayout: headerLayout\n      });\n    };\n\n    _this.scrollPosition = function (value) {\n      var headerLayout = _this.state.headerLayout;\n      return constants.scrollPosition(headerLayout.height, value);\n    };\n\n    _this.renderHeader = function (user) {\n      var _this$props = _this.props,\n          backgroundColor = _this$props.backgroundColor,\n          leftTopIconOnPress = _this$props.leftTopIconOnPress,\n          rightTopIconOnPress = _this$props.rightTopIconOnPress,\n          leftTopIcon = _this$props.leftTopIcon,\n          rightTopIcon = _this$props.rightTopIcon;\n\n      var opacity = _this.scrollY.y.interpolate({\n        inputRange: [0, _this.scrollPosition(60), _this.scrollPosition(90)],\n        outputRange: [0, 0, 1],\n        extrapolate: 'clamp'\n      });\n\n      return React.createElement(View, {\n        style: [styles.headerWrapper, {\n          backgroundColor: backgroundColor\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.headerMenu,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        hitSlop: sizes.hitSlop,\n        onPress: leftTopIconOnPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.icon,\n        resizeMode: \"contain\",\n        source: leftTopIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), React.createElement(Animated.View, {\n        style: [styles.headerTitleContainer, {\n          opacity: opacity\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.headerTitle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, user.label)), React.createElement(TouchableOpacity, {\n        hitSlop: sizes.hitSlop,\n        onPress: rightTopIconOnPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.icon,\n        resizeMode: \"contain\",\n        source: rightTopIcon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    _this.renderForeground = function (user) {\n      var labelColor = user.labelColor;\n      var _this$props2 = _this.props,\n          image = _this$props2.image,\n          title = _this$props2.title,\n          tag = _this$props2.tag,\n          iconNumber = _this$props2.iconNumber;\n\n      var labelOpacity = _this.scrollY.y.interpolate({\n        inputRange: [0, _this.scrollPosition(19), _this.scrollPosition(25)],\n        outputRange: [1, 0.8, 0],\n        extrapolate: 'clamp'\n      });\n\n      var titleOpacity = _this.scrollY.y.interpolate({\n        inputRange: [0, _this.scrollPosition(45), _this.scrollPosition(55)],\n        outputRange: [1, 0.8, 0],\n        extrapolate: 'clamp'\n      });\n\n      var authorOpacity = _this.scrollY.y.interpolate({\n        inputRange: [0, _this.scrollPosition(55), _this.scrollPosition(70)],\n        outputRange: [1, 0.8, 0],\n        extrapolate: 'clamp'\n      });\n\n      return React.createElement(View, {\n        style: styles.foreground,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.foregroundTitle, {\n          opacity: labelOpacity,\n          labelColor: labelColor\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.foregroundText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, tag)), React.createElement(Animated.View, {\n        style: [styles.messageContainer, {\n          opacity: titleOpacity\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 3,\n        style: styles.message,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, title)), React.createElement(Animated.View, {\n        style: [styles.infoContainer, {\n          opacity: authorOpacity\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.iconContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icons/cards_black.png\"),\n        style: styles.icon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.number,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, iconNumber)), React.createElement(View, {\n        style: styles.footerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: image,\n        style: styles.authorPhoto,\n        resizeMode: \"contain\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        numberOfLines: 1,\n        style: styles.authorName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, user.author))));\n    };\n\n    _this.renderBackground = function () {\n      var _this$props3 = _this.props,\n          hasBorderRadius = _this$props3.hasBorderRadius,\n          backgroundColor = _this$props3.backgroundColor;\n      var height = _this.state.headerLayout.height;\n\n      var headerBorderRadius = hasBorderRadius && _this.scrollY.y.interpolate({\n        inputRange: [0, height],\n        outputRange: [80, 0],\n        extrapolate: 'extend'\n      });\n\n      return React.createElement(Animated.View, {\n        style: [styles.background, {\n          borderBottomRightRadius: headerBorderRadius,\n          backgroundColor: backgroundColor\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      headerLayout: {\n        height: 0\n      }\n    };\n    _this.scrollY = new ValueXY();\n    return _this;\n  }\n\n  _createClass(DetailsHeader, [{\n    key: \"render\",\n    value: function render() {\n      var user = Brandon;\n      var _this$props4 = this.props,\n          backgroundColor = _this$props4.backgroundColor,\n          backgroundImage = _this$props4.backgroundImage,\n          renderBody = _this$props4.renderBody,\n          headerHeight = _this$props4.headerHeight,\n          snapToEdge = _this$props4.snapToEdge,\n          bounces = _this$props4.bounces;\n      return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: backgroundColor,\n        translucent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }), React.createElement(StickyParallaxHeader, {\n        foreground: this.renderForeground(user),\n        header: this.renderHeader(user),\n        deviceWidth: constants.deviceWidth,\n        parallaxHeight: sizes.cardScreenParallaxHeader,\n        scrollEvent: event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.scrollY.y\n            }\n          }\n        }], {\n          useNativeDriver: false\n        }),\n        headerSize: this.setHeaderSize,\n        headerHeight: headerHeight,\n        background: this.renderBackground(user),\n        snapToEdge: snapToEdge,\n        bounces: bounces,\n        backgroundImage: backgroundImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, renderBody(user)));\n    }\n  }]);\n\n  return DetailsHeader;\n}(React.Component);\n\nDetailsHeader.propTypes = {\n  leftTopIconOnPress: func,\n  rightTopIconOnPress: func,\n  leftTopIcon: number,\n  rightTopIcon: number,\n  backgroundColor: string,\n  headerHeight: number,\n  backgroundImage: Image.propTypes.source,\n  title: string,\n  tag: string,\n  image: Image.propTypes.source,\n  renderBody: func,\n  bounces: bool,\n  snapToEdge: bool,\n  hasBorderRadius: bool,\n  iconNumber: number\n};\nDetailsHeader.defaultProps = {\n  leftTopIconOnPress: function leftTopIconOnPress() {},\n  rightTopIconOnPress: function rightTopIconOnPress() {},\n  leftTopIcon: require(\"../../assets/icons/iconCloseWhite.png\"),\n  rightTopIcon: require(\"../../assets/icons/Icon-Menu.png\"),\n  backgroundColor: Brandon.color,\n  headerHeight: sizes.cardScreenHeaderHeight,\n  backgroundImage: null,\n  tag: Brandon.type,\n  title: Brandon.label,\n  image: Brandon.image,\n  renderBody: renderContent,\n  bounces: true,\n  snapToEdge: true,\n  hasBorderRadius: true,\n  iconNumber: Brandon.cardsAmount\n};\nexport default DetailsHeader;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/DetailsHeader/DetailsHeader.js"],"names":["React","bool","number","func","string","StickyParallaxHeader","constants","sizes","Brandon","styles","renderContent","event","Animated","ValueXY","DetailsHeader","props","setHeaderSize","headerLayout","setState","scrollPosition","value","state","height","renderHeader","user","backgroundColor","leftTopIconOnPress","rightTopIconOnPress","leftTopIcon","rightTopIcon","opacity","scrollY","y","interpolate","inputRange","outputRange","extrapolate","headerWrapper","headerMenu","hitSlop","icon","headerTitleContainer","headerTitle","label","renderForeground","labelColor","image","title","tag","iconNumber","labelOpacity","titleOpacity","authorOpacity","foreground","foregroundTitle","foregroundText","messageContainer","message","infoContainer","iconContainer","require","footerContainer","authorPhoto","authorName","author","renderBackground","hasBorderRadius","headerBorderRadius","background","borderBottomRightRadius","backgroundImage","renderBody","headerHeight","snapToEdge","bounces","deviceWidth","cardScreenParallaxHeader","nativeEvent","contentOffset","useNativeDriver","Component","propTypes","Image","source","defaultProps","color","cardScreenHeaderHeight","type","cardsAmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, Image, TouchableOpacity, StatusBar, Animated } from 'react-native';\nimport { bool, number, func, string } from 'prop-types';\nimport StickyParallaxHeader from '../../index';\nimport { constants, sizes } from '../../constants';\nimport { Brandon } from '../../assets/data/cards';\nimport styles from './DetailsHeader.styles';\nimport { renderContent } from './defaultProps/defaultProps';\n\nconst { event, ValueXY } = Animated;\nclass DetailsHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headerLayout: {\n        height: 0,\n      },\n    };\n\n    this.scrollY = new ValueXY();\n  }\n\n  setHeaderSize = (headerLayout) => this.setState({ headerLayout });\n\n  scrollPosition = (value) => {\n    const { headerLayout } = this.state;\n\n    return constants.scrollPosition(headerLayout.height, value);\n  };\n\n  renderHeader = (user) => {\n    const {\n      backgroundColor,\n      leftTopIconOnPress,\n      rightTopIconOnPress,\n      leftTopIcon,\n      rightTopIcon,\n    } = this.props;\n\n    const opacity = this.scrollY.y.interpolate({\n      inputRange: [0, this.scrollPosition(60), this.scrollPosition(90)],\n      outputRange: [0, 0, 1],\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <View style={[styles.headerWrapper, { backgroundColor }]}>\n        <View style={styles.headerMenu}>\n          <TouchableOpacity hitSlop={sizes.hitSlop} onPress={leftTopIconOnPress}>\n            <Image style={styles.icon} resizeMode=\"contain\" source={leftTopIcon} />\n          </TouchableOpacity>\n          <Animated.View style={[styles.headerTitleContainer, { opacity }]}>\n            <Text style={styles.headerTitle}>{user.label}</Text>\n          </Animated.View>\n          <TouchableOpacity hitSlop={sizes.hitSlop} onPress={rightTopIconOnPress}>\n            <Image style={styles.icon} resizeMode=\"contain\" source={rightTopIcon} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  renderForeground = (user) => {\n    const { labelColor } = user;\n    const { image, title, tag, iconNumber } = this.props;\n    const labelOpacity = this.scrollY.y.interpolate({\n      inputRange: [0, this.scrollPosition(19), this.scrollPosition(25)],\n      outputRange: [1, 0.8, 0],\n      extrapolate: 'clamp',\n    });\n    const titleOpacity = this.scrollY.y.interpolate({\n      inputRange: [0, this.scrollPosition(45), this.scrollPosition(55)],\n      outputRange: [1, 0.8, 0],\n      extrapolate: 'clamp',\n    });\n    const authorOpacity = this.scrollY.y.interpolate({\n      inputRange: [0, this.scrollPosition(55), this.scrollPosition(70)],\n      outputRange: [1, 0.8, 0],\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <View style={styles.foreground}>\n        <Animated.View style={[styles.foregroundTitle, { opacity: labelOpacity, labelColor }]}>\n          <Text style={styles.foregroundText}>{tag}</Text>\n        </Animated.View>\n        <Animated.View style={[styles.messageContainer, { opacity: titleOpacity }]}>\n          <Text numberOfLines={3} style={styles.message}>\n            {title}\n          </Text>\n        </Animated.View>\n        <Animated.View style={[styles.infoContainer, { opacity: authorOpacity }]}>\n          <View style={styles.iconContainer}>\n            <Image source={require('../../assets/icons/cards_black.png')} style={styles.icon} />\n            <Text style={styles.number}>{iconNumber}</Text>\n          </View>\n          <View style={styles.footerContainer}>\n            <Image source={image} style={styles.authorPhoto} resizeMode=\"contain\" />\n            <Text numberOfLines={1} style={styles.authorName}>\n              {user.author}\n            </Text>\n          </View>\n        </Animated.View>\n      </View>\n    );\n  };\n\n  renderBackground = () => {\n    const { hasBorderRadius, backgroundColor } = this.props;\n    const {\n      headerLayout: { height },\n    } = this.state;\n    const headerBorderRadius =\n      hasBorderRadius &&\n      this.scrollY.y.interpolate({\n        inputRange: [0, height],\n        outputRange: [80, 0],\n        extrapolate: 'extend',\n      });\n\n    return (\n      <Animated.View\n        style={[\n          styles.background,\n          {\n            borderBottomRightRadius: headerBorderRadius,\n            backgroundColor,\n          },\n        ]}\n      />\n    );\n  };\n\n  render() {\n    const user = Brandon;\n    const {\n      backgroundColor,\n      backgroundImage,\n      renderBody,\n      headerHeight,\n      snapToEdge,\n      bounces,\n    } = this.props;\n\n    return (\n      <>\n        <StatusBar barStyle=\"light-content\" backgroundColor={backgroundColor} translucent />\n        <StickyParallaxHeader\n          foreground={this.renderForeground(user)}\n          header={this.renderHeader(user)}\n          deviceWidth={constants.deviceWidth}\n          parallaxHeight={sizes.cardScreenParallaxHeader}\n          scrollEvent={event([{ nativeEvent: { contentOffset: { y: this.scrollY.y } } }], {\n            useNativeDriver: false,\n          })}\n          headerSize={this.setHeaderSize}\n          headerHeight={headerHeight}\n          background={this.renderBackground(user)}\n          snapToEdge={snapToEdge}\n          bounces={bounces}\n          backgroundImage={backgroundImage}>\n          {renderBody(user)}\n        </StickyParallaxHeader>\n      </>\n    );\n  }\n}\n\nDetailsHeader.propTypes = {\n  leftTopIconOnPress: func,\n  rightTopIconOnPress: func,\n  leftTopIcon: number,\n  rightTopIcon: number,\n  backgroundColor: string,\n  headerHeight: number,\n  backgroundImage: Image.propTypes.source,\n  title: string,\n  tag: string,\n  image: Image.propTypes.source,\n  renderBody: func,\n  bounces: bool,\n  snapToEdge: bool,\n  hasBorderRadius: bool,\n  iconNumber: number,\n};\nDetailsHeader.defaultProps = {\n  leftTopIconOnPress: () => {},\n  rightTopIconOnPress: () => {},\n  leftTopIcon: require('../../assets/icons/iconCloseWhite.png'),\n  rightTopIcon: require('../../assets/icons/Icon-Menu.png'),\n  backgroundColor: Brandon.color,\n  headerHeight: sizes.cardScreenHeaderHeight,\n  backgroundImage: null,\n  tag: Brandon.type,\n  title: Brandon.label,\n  image: Brandon.image,\n  renderBody: renderContent,\n  bounces: true,\n  snapToEdge: true,\n  hasBorderRadius: true,\n  iconNumber: Brandon.cardsAmount,\n};\n\nexport default DetailsHeader;\n"]},"metadata":{},"sourceType":"module"}