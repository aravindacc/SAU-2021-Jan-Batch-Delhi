{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/AvatarHeader/defaultProps/defaultProps.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { shape } from 'prop-types';\nimport { QuizListElement } from \"../../components\";\nimport { sizes, constants } from \"../../../constants\";\nimport styles from \"../../TabbedHeader/TabbedHeader.styles\";\nimport { Brandon } from \"../../../assets/data/cards\";\n\nvar RenderContent = function RenderContent(_ref) {\n  var user = _ref.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      contentHeight = _useState2[0],\n      setContentHeight = _useState2[1];\n\n  var title = \"Author's Quizes\";\n  var cards = [{\n    id: '4850294857',\n    elements: user.cardsAmount,\n    authorName: user.author,\n    mainText: user.label,\n    labelText: user.type,\n    imageSource: user.image\n  }];\n\n  var calcMargin = function calcMargin() {\n    var marginBottom = 0;\n\n    if (contentHeight) {\n      var padding = 24;\n      var isBigContent = constants.deviceHeight - contentHeight < 0;\n\n      if (isBigContent) {\n        return marginBottom;\n      }\n\n      marginBottom = constants.deviceHeight - padding - sizes.headerHeight - contentHeight;\n      return marginBottom;\n    }\n\n    return marginBottom;\n  };\n\n  var onLayoutContent = function onLayoutContent(e) {\n    setContentHeight(e.nativeEvent.layout.height);\n  };\n\n  var marginContentBottom = Platform.select({\n    ios: calcMargin(),\n    android: 0\n  });\n  return React.createElement(View, {\n    onLayout: onLayoutContent,\n    style: [styles.content, {\n      marginBottom: marginContentBottom,\n      paddingBottom: sizes.userScreenParallaxHeader\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.contentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, title), cards.map(function (card) {\n    return React.createElement(QuizListElement, {\n      key: card.id,\n      elements: card.elements,\n      authorName: card.authorName,\n      mainText: card.mainText,\n      labelText: card.labelText,\n      imageSource: card.imageSource,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nRenderContent.propTypes = {\n  user: shape({})\n};\nRenderContent.defaultProps = {\n  user: Brandon\n};\nexport default RenderContent;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/AvatarHeader/defaultProps/defaultProps.js"],"names":["React","useState","shape","QuizListElement","sizes","constants","styles","Brandon","RenderContent","user","contentHeight","setContentHeight","title","cards","id","elements","cardsAmount","authorName","author","mainText","label","labelText","type","imageSource","image","calcMargin","marginBottom","padding","isBigContent","deviceHeight","headerHeight","onLayoutContent","e","nativeEvent","layout","height","marginContentBottom","Platform","select","ios","android","content","paddingBottom","userScreenParallaxHeader","contentText","map","card","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Platform } from 'react-native';\nimport { shape } from 'prop-types';\nimport { QuizListElement } from '../../components';\nimport { sizes, constants } from '../../../constants';\nimport styles from '../../TabbedHeader/TabbedHeader.styles';\nimport { Brandon } from '../../../assets/data/cards';\n\nconst RenderContent = ({ user }) => {\n  const [contentHeight, setContentHeight] = useState('');\n  const title = \"Author's Quizes\";\n  const cards = [\n    {\n      id: '4850294857',\n      elements: user.cardsAmount,\n      authorName: user.author,\n      mainText: user.label,\n      labelText: user.type,\n      imageSource: user.image,\n    },\n  ];\n\n  const calcMargin = () => {\n    let marginBottom = 0;\n\n    if (contentHeight) {\n      const padding = 24;\n      const isBigContent = constants.deviceHeight - contentHeight < 0;\n\n      if (isBigContent) {\n        return marginBottom;\n      }\n\n      marginBottom = constants.deviceHeight - padding - sizes.headerHeight - contentHeight;\n\n      return marginBottom;\n    }\n\n    return marginBottom;\n  };\n\n  const onLayoutContent = (e) => {\n    setContentHeight(e.nativeEvent.layout.height);\n  };\n\n  const marginContentBottom = Platform.select({ ios: calcMargin(), android: 0 });\n\n  return (\n    <View\n      onLayout={onLayoutContent}\n      style={[\n        styles.content,\n        {\n          marginBottom: marginContentBottom,\n          paddingBottom: sizes.userScreenParallaxHeader,\n        },\n      ]}>\n      <Text style={styles.contentText}>{title}</Text>\n      {cards.map((card) => (\n        <QuizListElement\n          key={card.id}\n          elements={card.elements}\n          authorName={card.authorName}\n          mainText={card.mainText}\n          labelText={card.labelText}\n          imageSource={card.imageSource}\n        />\n      ))}\n    </View>\n  );\n};\n\nRenderContent.propTypes = {\n  user: shape({}),\n};\n\nRenderContent.defaultProps = {\n  user: Brandon,\n};\n\nexport default RenderContent;\n"]},"metadata":{},"sourceType":"module"}