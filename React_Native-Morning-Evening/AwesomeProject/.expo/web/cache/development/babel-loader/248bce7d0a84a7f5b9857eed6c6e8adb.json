{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/components/QuizListElement/QuizListElement.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { func, string, number } from 'prop-types';\nimport styles from \"./QuizListElement.styles\";\nimport { colors } from \"../../../constants\";\n\nvar QuizListElement = function QuizListElement(_ref) {\n  var onPress = _ref.onPress,\n      authorName = _ref.authorName,\n      imageSource = _ref.imageSource,\n      mainText = _ref.mainText,\n      labelText = _ref.labelText,\n      elements = _ref.elements,\n      pressUser = _ref.pressUser;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: styles.container,\n    activeOpacity: 0.95,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.labelContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.labelTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, labelText)), React.createElement(View, {\n    style: [styles.iconContainer, elements >= 20 && {\n      backgroundColor: colors.coralPink\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/icons/cards.png\"),\n    style: styles.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [styles.number, elements < 10 && styles.iconCardElement],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, elements))), React.createElement(View, {\n    style: styles.mainTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.mainText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, mainText)), React.createElement(View, {\n    style: styles.authorWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.authorContainer,\n    onPress: pressUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.footerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: imageSource,\n    style: styles.authorPhoto,\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.authorName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, authorName))), React.createElement(View, {\n    style: styles.authorBlankContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n};\n\nQuizListElement.propTypes = {\n  onPress: func,\n  authorName: string,\n  mainText: string,\n  labelText: string,\n  elements: number,\n  imageSource: Image.propTypes.source,\n  pressUser: func\n};\nexport default QuizListElement;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/predefinedComponents/components/QuizListElement/QuizListElement.js"],"names":["React","func","string","number","styles","colors","QuizListElement","onPress","authorName","imageSource","mainText","labelText","elements","pressUser","container","labelContainer","labelTextContainer","iconContainer","backgroundColor","coralPink","require","icon","iconCardElement","mainTextContainer","authorWrapper","authorContainer","footerContainer","authorPhoto","authorBlankContainer","propTypes","Image","source"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\nimport { func, string, number } from 'prop-types';\nimport styles from './QuizListElement.styles';\nimport { colors } from '../../../constants';\n\nconst QuizListElement = ({\n  onPress,\n  authorName,\n  imageSource,\n  mainText,\n  labelText,\n  elements,\n  pressUser,\n}) => (\n  <TouchableOpacity onPress={onPress} style={styles.container} activeOpacity={0.95}>\n    <View style={styles.labelContainer}>\n      <View style={styles.labelTextContainer}>\n        <Text style={styles.labelText}>{labelText}</Text>\n      </View>\n      <View style={[styles.iconContainer, elements >= 20 && { backgroundColor: colors.coralPink }]}>\n        <Image source={require('../../../assets/icons/cards.png')} style={styles.icon} />\n        <Text style={[styles.number, elements < 10 && styles.iconCardElement]}>{elements}</Text>\n      </View>\n    </View>\n    <View style={styles.mainTextContainer}>\n      <Text style={styles.mainText}>{mainText}</Text>\n    </View>\n    <View style={styles.authorWrapper}>\n      <TouchableOpacity style={styles.authorContainer} onPress={pressUser}>\n        <View style={styles.footerContainer}>\n          <Image source={imageSource} style={styles.authorPhoto} resizeMode=\"contain\" />\n          <Text style={styles.authorName}>{authorName}</Text>\n        </View>\n      </TouchableOpacity>\n      <View style={styles.authorBlankContainer} />\n    </View>\n  </TouchableOpacity>\n);\n\nQuizListElement.propTypes = {\n  onPress: func,\n  authorName: string,\n  mainText: string,\n  labelText: string,\n  elements: number,\n  imageSource: Image.propTypes.source,\n  pressUser: func,\n};\n\nexport default QuizListElement;\n"]},"metadata":{},"sourceType":"module"}