{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/StickyParallaxHeader.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { bool, func, node, number, shape, string, oneOfType, oneOf, instanceOf, element } from 'prop-types';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollableTabBar, ScrollableTabView } from \"./components\";\nimport { constants } from \"./constants\";\nimport styles from \"./styles\";\nimport { getSafelyScrollNode, setRef } from \"./utils\";\nvar divide = Animated.divide,\n    Value = Animated.Value,\n    createAnimatedComponent = Animated.createAnimatedComponent,\n    event = Animated.event,\n    timing = Animated.timing,\n    ValueXY = Animated.ValueXY;\nvar AnimatedScrollView = createAnimatedComponent(ScrollView);\n\nvar StickyParallaxHeader = function (_Component) {\n  _inherits(StickyParallaxHeader, _Component);\n\n  var _super = _createSuper(StickyParallaxHeader);\n\n  function StickyParallaxHeader(_props) {\n    var _this;\n\n    _classCallCheck(this, StickyParallaxHeader);\n\n    _this = _super.call(this, _props);\n\n    _this.spring = function () {\n      var scrollNode = getSafelyScrollNode(_this.scroll);\n      scrollNode.scrollTo({\n        x: 0,\n        y: 40,\n        animated: true\n      });\n      return setTimeout(function () {\n        setTimeout(function () {\n          scrollNode.scrollTo({\n            x: 0,\n            y: 25,\n            animated: true\n          });\n        }, 200);\n        scrollNode.scrollTo({\n          x: 0,\n          y: 0,\n          animated: true\n        });\n      }, 300);\n    };\n\n    _this.onScrollEndSnapToEdge = function (height) {\n      var _this$props = _this.props,\n          snapStartThreshold = _this$props.snapStartThreshold,\n          snapStopThreshold = _this$props.snapStopThreshold,\n          snapValue = _this$props.snapValue;\n      var scrollHeight = snapStopThreshold || height;\n      var snap = snapValue || height;\n      var _this$props2 = _this.props,\n          snapToEdge = _this$props2.snapToEdge,\n          refreshControl = _this$props2.refreshControl;\n      var scrollNode = getSafelyScrollNode(_this.scroll);\n\n      var scrollValue = _this.scrollY.__getValue();\n\n      var y = scrollValue.y;\n      var snapToEdgeAnimatedValue = new ValueXY(scrollValue);\n      var snapToEdgeThreshold = snapStartThreshold || height / 2;\n      var id = snapToEdgeAnimatedValue.addListener(function (value) {\n        scrollNode.scrollTo({\n          x: 0,\n          y: value.y,\n          animated: false\n        });\n      });\n      if (y < -20 && !constants.isAndroid && !refreshControl) _this.spring(y);\n\n      if (snapToEdge) {\n        if (y > 0 && y < snapToEdgeThreshold) {\n          return constants.isAndroid ? _this.setState({\n            isFolded: false\n          }, scrollNode.scrollTo({\n            x: 0,\n            y: 0,\n            animated: true\n          })) : timing(snapToEdgeAnimatedValue, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            duration: 400,\n            easing: Easing.out(Easing.cubic),\n            useNativeDriver: true\n          }).start(function () {\n            snapToEdgeAnimatedValue.removeListener(id);\n\n            _this.setState({\n              isFolded: false\n            });\n          });\n        }\n\n        if (y >= snapToEdgeThreshold && y < scrollHeight) {\n          return constants.isAndroid ? _this.setState({\n            isFolded: true\n          }, scrollNode.scrollTo({\n            x: 0,\n            y: scrollHeight,\n            animated: true\n          })) : timing(snapToEdgeAnimatedValue, {\n            toValue: {\n              x: 0,\n              y: snap\n            },\n            duration: 400,\n            easing: Easing.out(Easing.cubic),\n            useNativeDriver: true\n          }).start(function () {\n            snapToEdgeAnimatedValue.removeListener(id);\n\n            _this.setState({\n              isFolded: true\n            });\n          });\n        }\n      }\n\n      return null;\n    };\n\n    _this.onChangeTabHandler = function (tab) {\n      var onChangeTab = _this.props.onChangeTab;\n      return onChangeTab && onChangeTab(tab);\n    };\n\n    _this.onLayout = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          x = _e$nativeEvent$layout.x,\n          y = _e$nativeEvent$layout.y,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n      var headerSize = _this.props.headerSize;\n      var headerLayout = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n      headerSize(headerLayout);\n    };\n\n    _this.goToPage = function (pageNumber) {\n      var _this$state = _this.state,\n          containerWidth = _this$state.containerWidth,\n          currentPage = _this$state.currentPage;\n      var offset = pageNumber * containerWidth;\n\n      if (currentPage !== pageNumber) {\n        _this.setState({\n          currentPage: pageNumber\n        });\n      }\n\n      if (_this.scrollView) {\n        _this.scrollView.scrollTo({\n          x: offset,\n          y: 0,\n          animated: true\n        });\n      }\n    };\n\n    _this.isCloseToBottom = function (_ref) {\n      var layoutMeasurement = _ref.layoutMeasurement,\n          contentOffset = _ref.contentOffset,\n          contentSize = _ref.contentSize;\n      var onEndReached = _this.props.onEndReached;\n\n      if (layoutMeasurement.height + contentOffset.y >= contentSize.height - 20) {\n        return onEndReached && onEndReached();\n      }\n\n      return null;\n    };\n\n    _this.isCloseToTop = function (_ref2) {\n      var contentOffset = _ref2.contentOffset;\n      var onTopReached = _this.props.onTopReached;\n\n      if (contentOffset.y <= 0) {\n        return onTopReached && onTopReached();\n      }\n\n      return null;\n    };\n\n    _this.renderHeader = function () {\n      var _this$props3 = _this.props,\n          header = _this$props3.header,\n          headerHeight = _this$props3.headerHeight,\n          backgroundColor = _this$props3.backgroundColor,\n          transparentHeader = _this$props3.transparentHeader;\n      var headerStyle = header.props.style;\n      var isArray = Array.isArray(headerStyle);\n      var arrayHeaderStyle = {};\n\n      if (isArray) {\n        headerStyle.map(function (el) {\n          return _extends(arrayHeaderStyle, el);\n        });\n      }\n\n      return React.createElement(View, {\n        style: (styles.toolbarWrapper, _objectSpread({\n          height: headerHeight,\n          backgroundColor: isArray ? arrayHeaderStyle.backgroundColor : backgroundColor || (headerStyle == null ? void 0 : headerStyle.backgroundColor)\n        }, transparentHeader && styles.transparentHeader)),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, header);\n    };\n\n    _this.renderImageBackground = function (backgroundHeight) {\n      var _this$props4 = _this.props,\n          backgroundImage = _this$props4.backgroundImage,\n          background = _this$props4.background;\n      var AnimatedImageBackground = createAnimatedComponent(ImageBackground);\n      return React.createElement(AnimatedImageBackground, {\n        style: [styles.headerStyle, {\n          height: backgroundHeight\n        }],\n        source: backgroundImage,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 7\n        }\n      }, background);\n    };\n\n    _this.renderPlainBackground = function (backgroundHeight) {\n      var background = _this.props.background;\n      return React.createElement(View, {\n        style: [styles.headerStyle, {\n          height: backgroundHeight\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }\n      }, background);\n    };\n\n    _this.renderForeground = function (backgroundHeight) {\n      var _this$props5 = _this.props,\n          foreground = _this$props5.foreground,\n          tabsContainerBackgroundColor = _this$props5.tabsContainerBackgroundColor,\n          backgroundImage = _this$props5.backgroundImage;\n      return React.createElement(View, {\n        style: _objectSpread({\n          height: backgroundHeight,\n          backgroundColor: tabsContainerBackgroundColor\n        }, backgroundImage && styles.transparentBackground),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 7\n        }\n      }, foreground);\n    };\n\n    _this.renderTabs = function () {\n      var _this$props6 = _this.props,\n          tabs = _this$props6.tabs,\n          tabTextStyle = _this$props6.tabTextStyle,\n          tabTextActiveStyle = _this$props6.tabTextActiveStyle,\n          tabTextContainerStyle = _this$props6.tabTextContainerStyle,\n          tabTextContainerActiveStyle = _this$props6.tabTextContainerActiveStyle,\n          tabsContainerBackgroundColor = _this$props6.tabsContainerBackgroundColor,\n          tabWrapperStyle = _this$props6.tabWrapperStyle,\n          tabsContainerStyle = _this$props6.tabsContainerStyle;\n      var _this$state2 = _this.state,\n          scrollValue = _this$state2.scrollValue,\n          currentPage = _this$state2.currentPage,\n          containerWidth = _this$state2.containerWidth;\n      var props = {\n        activeTab: currentPage,\n        containerWidth: containerWidth,\n        goToPage: _this.goToPage,\n        scrollValue: scrollValue,\n        tabTextActiveStyle: tabTextActiveStyle,\n        tabTextContainerActiveStyle: tabTextContainerActiveStyle,\n        tabTextContainerStyle: tabTextContainerStyle,\n        tabTextStyle: tabTextStyle,\n        tabsContainerBackgroundColor: tabsContainerBackgroundColor,\n        tabs: tabs,\n        tabWrapperStyle: tabWrapperStyle,\n        tabsContainerStyle: tabsContainerStyle\n      };\n      return React.createElement(ScrollableTabBar, _extends({}, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    var initialPage = _this.props.initialPage;\n\n    var _Dimensions$get = Dimensions.get('window'),\n        _width = _Dimensions$get.width;\n\n    var scrollXIOS = new Value(initialPage * _width);\n    var containerWidthAnimatedValue = new Value(_width);\n    _this.tabsScrollPosition = [];\n\n    containerWidthAnimatedValue.__makeNative();\n\n    var _scrollValue = divide(scrollXIOS, containerWidthAnimatedValue);\n\n    _this.state = {\n      scrollValue: _scrollValue,\n      containerWidth: _width,\n      currentPage: initialPage,\n      isFolded: false\n    };\n    _this.scrollY = new ValueXY();\n    return _this;\n  }\n\n  _createClass(StickyParallaxHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this,\n          _this$props$onRef,\n          _this$props7;\n\n      this.scrollY.addListener(function (_ref3) {\n        var value = _ref3.value;\n        return _this2._value = value;\n      });\n      (_this$props$onRef = (_this$props7 = this.props).onRef) == null ? void 0 : _this$props$onRef.call(_this$props7, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      var _this$props8 = this.props,\n          headerHeight = _this$props8.headerHeight,\n          parallaxHeight = _this$props8.parallaxHeight,\n          tabs = _this$props8.tabs,\n          rememberTabScrollPosition = _this$props8.rememberTabScrollPosition;\n      var prevPage = prevState.currentPage;\n      var _this$state3 = this.state,\n          currentPage = _this$state3.currentPage,\n          isFolded = _this$state3.isFolded;\n      var isRenderingTabs = tabs && tabs.length > 0;\n\n      if (isRenderingTabs && prevPage !== currentPage && isFolded) {\n        var currentScrollPosition = this.scrollY.__getValue().y;\n\n        var scrollHeight = Math.max(parallaxHeight, headerHeight * 2);\n        this.tabsScrollPosition[prevPage] = currentScrollPosition;\n        setTimeout(function () {\n          var scrollTargetPosition = rememberTabScrollPosition && _this3.tabsScrollPosition[currentPage] ? _this3.tabsScrollPosition[currentPage] : scrollHeight;\n          var scrollNode = getSafelyScrollNode(_this3.scroll);\n          scrollNode.scrollTo({\n            y: scrollTargetPosition,\n            duration: 1000\n          });\n        }, 250);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props$onRef2, _this$props9;\n\n      this.scrollY.removeAllListeners();\n      (_this$props$onRef2 = (_this$props9 = this.props).onRef) == null ? void 0 : _this$props$onRef2.call(_this$props9, null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props10 = this.props,\n          backgroundImage = _this$props10.backgroundImage,\n          children = _this$props10.children,\n          contentContainerStyles = _this$props10.contentContainerStyles,\n          header = _this$props10.header,\n          headerHeight = _this$props10.headerHeight,\n          initialPage = _this$props10.initialPage,\n          parallaxHeight = _this$props10.parallaxHeight,\n          tabs = _this$props10.tabs,\n          bounces = _this$props10.bounces,\n          scrollEvent = _this$props10.scrollEvent,\n          keyboardShouldPersistTaps = _this$props10.keyboardShouldPersistTaps,\n          scrollRef = _this$props10.scrollRef,\n          refreshControl = _this$props10.refreshControl;\n      var _this$state4 = this.state,\n          currentPage = _this$state4.currentPage,\n          isFolded = _this$state4.isFolded;\n      var scrollHeight = Math.max(parallaxHeight, headerHeight * 2);\n      var headerStyle = header.props.style;\n      var isArray = Array.isArray(headerStyle);\n      var arrayHeaderStyle = {};\n\n      if (isArray) {\n        headerStyle.map(function (el) {\n          return _extends(arrayHeaderStyle, el);\n        });\n      }\n\n      var scrollViewMinHeight = Dimensions.get('window').height + parallaxHeight - headerHeight;\n      var innerScrollHeight = Dimensions.get('window').height - headerHeight - parallaxHeight;\n      var shouldRenderTabs = tabs && tabs.length > 0;\n      var shouldUseBgColor = contentContainerStyles && contentContainerStyles.backgroundColor;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 7\n        }\n      }, header && this.renderHeader(), React.createElement(AnimatedScrollView, {\n        bounces: bounces,\n        overScrollMode: \"never\",\n        refreshControl: refreshControl,\n        bouncesZoom: true,\n        decelerationRate: \"fast\",\n        nestedScrollEnabled: true,\n        ref: function ref(c) {\n          _this4.scroll = c;\n          setRef(scrollRef, c);\n        },\n        contentContainerStyle: {\n          minHeight: scrollViewMinHeight,\n          backgroundColor: shouldUseBgColor\n        },\n        onScrollEndDrag: function onScrollEndDrag() {\n          return _this4.onScrollEndSnapToEdge(scrollHeight);\n        },\n        scrollEventThrottle: 1,\n        stickyHeaderIndices: shouldRenderTabs ? [1] : [],\n        showsVerticalScrollIndicator: false,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        onScroll: event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.scrollY.y\n            }\n          }\n        }], {\n          useNativeDriver: true,\n          listener: function listener(e) {\n            _this4.isCloseToBottom(e.nativeEvent);\n\n            _this4.isCloseToTop(e.nativeEvent);\n\n            scrollEvent(e);\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          height: parallaxHeight\n        },\n        onLayout: function onLayout(e) {\n          return _this4.onLayout(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.overScrollPadding, {\n          backgroundColor: isArray ? arrayHeaderStyle.backgroundColor : headerStyle == null ? void 0 : headerStyle.backgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }), backgroundImage ? this.renderImageBackground(scrollHeight) : this.renderPlainBackground(scrollHeight), this.renderForeground(scrollHeight)), shouldRenderTabs && this.renderTabs(), React.createElement(ScrollableTabView, {\n        contentContainerStyles: contentContainerStyles,\n        initialPage: initialPage,\n        onChangeTab: function onChangeTab(i) {\n          return _this4.onChangeTabHandler(i);\n        },\n        tabs: tabs,\n        page: currentPage,\n        swipedPage: this.goToPage,\n        scrollRef: this.scroll,\n        scrollHeight: scrollHeight,\n        isHeaderFolded: isFolded,\n        minScrollHeight: innerScrollHeight,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }, !tabs && children, tabs && tabs.map(function (item) {\n        return React.createElement(View, {\n          tabLabel: item.title,\n          key: item.title,\n          onLayout: _this4.setContentHeight,\n          ref: function ref(c) {\n            _this4.tab = c;\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }\n        }, item.content);\n      }))));\n    }\n  }]);\n\n  return StickyParallaxHeader;\n}(Component);\n\nStickyParallaxHeader.propTypes = {\n  background: node,\n  backgroundColor: string,\n  backgroundImage: Image.propTypes.source,\n  bounces: bool,\n  children: node,\n  contentContainerStyles: ViewPropTypes.style,\n  foreground: node,\n  header: node,\n  headerHeight: number,\n  headerSize: func.isRequired,\n  initialPage: number,\n  onChangeTab: func,\n  onEndReached: func,\n  parallaxHeight: number,\n  rememberTabScrollPosition: bool,\n  scrollEvent: func,\n  snapToEdge: bool,\n  tabTextActiveStyle: shape({}),\n  tabTextContainerActiveStyle: shape({}),\n  tabTextContainerStyle: shape({}),\n  tabTextStyle: shape({}),\n  tabs: ScrollableTabBar.propTypes.tabs,\n  tabsContainerBackgroundColor: string,\n  tabWrapperStyle: ViewPropTypes.style,\n  tabsContainerStyle: ViewPropTypes.style,\n  snapStartThreshold: oneOfType([bool, number]),\n  snapStopThreshold: oneOfType([bool, number]),\n  snapValue: oneOfType([bool, number]),\n  transparentHeader: bool,\n  onRef: func,\n  onTopReached: func,\n  scrollRef: oneOfType([func, shape({\n    current: instanceOf(ScrollView)\n  })]),\n  keyboardShouldPersistTaps: oneOf(['never', 'always', 'handled', false, true, undefined]),\n  refreshControl: element\n};\nStickyParallaxHeader.defaultProps = {\n  bounces: true,\n  contentContainerStyles: {},\n  headerHeight: 92,\n  backgroundColor: '',\n  initialPage: 0,\n  parallaxHeight: 0,\n  snapToEdge: true,\n  tabTextActiveStyle: {},\n  tabTextContainerActiveStyle: {},\n  tabTextContainerStyle: {},\n  tabTextStyle: {},\n  tabWrapperStyle: {},\n  rememberTabScrollPosition: false,\n  snapStartThreshold: false,\n  snapStopThreshold: false,\n  snapValue: false,\n  transparentHeader: false,\n  onRef: null,\n  scrollRef: null,\n  keyboardShouldPersistTaps: undefined,\n  refreshControl: undefined\n};\nexport default StickyParallaxHeader;","map":{"version":3,"sources":["/home/saksham/Desktop/ReactNativeAssignment/AwesomeProject/node_modules/react-native-sticky-parallax-header/src/StickyParallaxHeader.js"],"names":["React","Component","bool","func","node","number","shape","string","oneOfType","oneOf","instanceOf","element","ViewPropTypes","ScrollableTabBar","ScrollableTabView","constants","styles","getSafelyScrollNode","setRef","divide","Animated","Value","createAnimatedComponent","event","timing","ValueXY","AnimatedScrollView","ScrollView","StickyParallaxHeader","props","spring","scrollNode","scroll","scrollTo","x","y","animated","setTimeout","onScrollEndSnapToEdge","height","snapStartThreshold","snapStopThreshold","snapValue","scrollHeight","snap","snapToEdge","refreshControl","scrollValue","scrollY","__getValue","snapToEdgeAnimatedValue","snapToEdgeThreshold","id","addListener","value","isAndroid","setState","isFolded","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","removeListener","onChangeTabHandler","tab","onChangeTab","onLayout","e","nativeEvent","layout","width","headerSize","headerLayout","goToPage","pageNumber","state","containerWidth","currentPage","offset","scrollView","isCloseToBottom","layoutMeasurement","contentOffset","contentSize","onEndReached","isCloseToTop","onTopReached","renderHeader","header","headerHeight","backgroundColor","transparentHeader","headerStyle","style","isArray","Array","arrayHeaderStyle","map","el","toolbarWrapper","renderImageBackground","backgroundHeight","backgroundImage","background","AnimatedImageBackground","ImageBackground","renderPlainBackground","renderForeground","foreground","tabsContainerBackgroundColor","transparentBackground","renderTabs","tabs","tabTextStyle","tabTextActiveStyle","tabTextContainerStyle","tabTextContainerActiveStyle","tabWrapperStyle","tabsContainerStyle","activeTab","initialPage","Dimensions","get","scrollXIOS","containerWidthAnimatedValue","tabsScrollPosition","__makeNative","_value","onRef","prevProps","prevState","parallaxHeight","rememberTabScrollPosition","prevPage","isRenderingTabs","length","currentScrollPosition","Math","max","scrollTargetPosition","removeAllListeners","children","contentContainerStyles","bounces","scrollEvent","keyboardShouldPersistTaps","scrollRef","scrollViewMinHeight","innerScrollHeight","shouldRenderTabs","shouldUseBgColor","container","c","minHeight","listener","overScrollPadding","i","item","title","setContentHeight","content","propTypes","Image","source","isRequired","current","undefined","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  bool,\n  func,\n  node,\n  number,\n  shape,\n  string,\n  oneOfType,\n  oneOf,\n  instanceOf,\n  element,\n} from 'prop-types';\nimport {\n  Dimensions,\n  ImageBackground,\n  ScrollView,\n  View,\n  Animated,\n  Easing,\n  ViewPropTypes,\n  Image,\n} from 'react-native';\nimport { ScrollableTabBar, ScrollableTabView } from './components';\nimport { constants } from './constants';\nimport styles from './styles';\nimport { getSafelyScrollNode, setRef } from './utils';\n\nconst { divide, Value, createAnimatedComponent, event, timing, ValueXY } = Animated;\nconst AnimatedScrollView = createAnimatedComponent(ScrollView);\n\nclass StickyParallaxHeader extends Component {\n  constructor(props) {\n    super(props);\n    const { initialPage } = this.props;\n    const { width } = Dimensions.get('window');\n    const scrollXIOS = new Value(initialPage * width);\n    const containerWidthAnimatedValue = new Value(width);\n    this.tabsScrollPosition = [];\n\n    // eslint-disable-next-line no-underscore-dangle\n    containerWidthAnimatedValue.__makeNative();\n    const scrollValue = divide(scrollXIOS, containerWidthAnimatedValue);\n    this.state = {\n      scrollValue,\n      containerWidth: width,\n      currentPage: initialPage,\n      isFolded: false,\n    };\n    this.scrollY = new ValueXY();\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line\n    this.scrollY.addListener(({ value }) => (this._value = value));\n    this.props.onRef?.(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { headerHeight, parallaxHeight, tabs, rememberTabScrollPosition } = this.props;\n    const prevPage = prevState.currentPage;\n    const { currentPage, isFolded } = this.state;\n    const isRenderingTabs = tabs && tabs.length > 0;\n\n    if (isRenderingTabs && prevPage !== currentPage && isFolded) {\n      const currentScrollPosition = this.scrollY.__getValue().y;\n      const scrollHeight = Math.max(parallaxHeight, headerHeight * 2);\n\n      this.tabsScrollPosition[prevPage] = currentScrollPosition;\n\n      setTimeout(() => {\n        const scrollTargetPosition =\n          rememberTabScrollPosition && this.tabsScrollPosition[currentPage]\n            ? this.tabsScrollPosition[currentPage]\n            : scrollHeight;\n        const scrollNode = getSafelyScrollNode(this.scroll);\n        scrollNode.scrollTo({ y: scrollTargetPosition, duration: 1000 });\n      }, 250);\n    }\n  }\n\n  componentWillUnmount() {\n    this.scrollY.removeAllListeners();\n    this.props.onRef?.(null);\n  }\n\n  spring = () => {\n    const scrollNode = getSafelyScrollNode(this.scroll);\n    scrollNode.scrollTo({ x: 0, y: 40, animated: true });\n\n    return setTimeout(() => {\n      setTimeout(() => {\n        scrollNode.scrollTo({ x: 0, y: 25, animated: true });\n      }, 200);\n      scrollNode.scrollTo({ x: 0, y: 0, animated: true });\n    }, 300);\n  };\n\n  onScrollEndSnapToEdge = (height) => {\n    const { snapStartThreshold, snapStopThreshold, snapValue } = this.props;\n    const scrollHeight = snapStopThreshold || height;\n    const snap = snapValue || height;\n    const { snapToEdge, refreshControl } = this.props;\n\n    const scrollNode = getSafelyScrollNode(this.scroll);\n    const scrollValue = this.scrollY.__getValue();\n    const { y } = scrollValue;\n    const snapToEdgeAnimatedValue = new ValueXY(scrollValue);\n    const snapToEdgeThreshold = snapStartThreshold || height / 2;\n    const id = snapToEdgeAnimatedValue.addListener((value) => {\n      scrollNode.scrollTo({ x: 0, y: value.y, animated: false });\n    });\n\n    if (y < -20 && !constants.isAndroid && !refreshControl) this.spring(y);\n\n    if (snapToEdge) {\n      if (y > 0 && y < snapToEdgeThreshold) {\n        return constants.isAndroid\n          ? this.setState(\n              {\n                isFolded: false,\n              },\n              scrollNode.scrollTo({ x: 0, y: 0, animated: true })\n            )\n          : timing(snapToEdgeAnimatedValue, {\n              toValue: { x: 0, y: 0 },\n              duration: 400,\n              easing: Easing.out(Easing.cubic),\n              useNativeDriver: true,\n            }).start(() => {\n              snapToEdgeAnimatedValue.removeListener(id);\n              this.setState({\n                isFolded: false,\n              });\n            });\n      }\n      if (y >= snapToEdgeThreshold && y < scrollHeight) {\n        return constants.isAndroid\n          ? this.setState(\n              {\n                isFolded: true,\n              },\n              scrollNode.scrollTo({ x: 0, y: scrollHeight, animated: true })\n            )\n          : timing(snapToEdgeAnimatedValue, {\n              toValue: { x: 0, y: snap },\n              duration: 400,\n              easing: Easing.out(Easing.cubic),\n              useNativeDriver: true,\n            }).start(() => {\n              snapToEdgeAnimatedValue.removeListener(id);\n              this.setState({\n                isFolded: true,\n              });\n            });\n      }\n    }\n\n    return null;\n  };\n\n  onChangeTabHandler = (tab) => {\n    const { onChangeTab } = this.props;\n\n    return onChangeTab && onChangeTab(tab);\n  };\n\n  onLayout = (e) => {\n    const { x, y, width, height } = e.nativeEvent.layout;\n    const { headerSize } = this.props;\n    const headerLayout = {\n      x,\n      y,\n      width,\n      height,\n    };\n    headerSize(headerLayout);\n  };\n\n  goToPage = (pageNumber) => {\n    const { containerWidth, currentPage } = this.state;\n    const offset = pageNumber * containerWidth;\n    if (currentPage !== pageNumber) {\n      this.setState({\n        currentPage: pageNumber,\n      });\n    }\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: true,\n      });\n    }\n  };\n\n  isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n    const { onEndReached } = this.props;\n\n    if (layoutMeasurement.height + contentOffset.y >= contentSize.height - 20) {\n      return onEndReached && onEndReached();\n    }\n\n    return null;\n  };\n\n  isCloseToTop = ({ contentOffset }) => {\n    const { onTopReached } = this.props;\n    if (contentOffset.y <= 0) {\n      return onTopReached && onTopReached();\n    }\n\n    return null;\n  };\n\n  renderHeader = () => {\n    const { header, headerHeight, backgroundColor, transparentHeader } = this.props;\n\n    const headerStyle = header.props.style;\n    const isArray = Array.isArray(headerStyle);\n    const arrayHeaderStyle = {};\n    if (isArray) {\n      headerStyle.map((el) => Object.assign(arrayHeaderStyle, el));\n    }\n\n    return (\n      <View\n        style={\n          (styles.toolbarWrapper,\n          {\n            height: headerHeight,\n            backgroundColor: isArray\n              ? arrayHeaderStyle.backgroundColor\n              : backgroundColor || headerStyle?.backgroundColor,\n            ...(transparentHeader && styles.transparentHeader),\n          })\n        }>\n        {header}\n      </View>\n    );\n  };\n\n  renderImageBackground = (backgroundHeight) => {\n    const { backgroundImage, background } = this.props;\n\n    const AnimatedImageBackground = createAnimatedComponent(ImageBackground);\n\n    return (\n      <AnimatedImageBackground\n        style={[\n          styles.headerStyle,\n          {\n            height: backgroundHeight,\n          },\n        ]}\n        source={backgroundImage}>\n        {background}\n      </AnimatedImageBackground>\n    );\n  };\n\n  renderPlainBackground = (backgroundHeight) => {\n    const { background } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.headerStyle,\n          {\n            height: backgroundHeight,\n          },\n        ]}>\n        {background}\n      </View>\n    );\n  };\n\n  renderForeground = (backgroundHeight) => {\n    const { foreground, tabsContainerBackgroundColor, backgroundImage } = this.props;\n\n    return (\n      <View\n        style={{\n          height: backgroundHeight,\n          backgroundColor: tabsContainerBackgroundColor,\n          ...(backgroundImage && styles.transparentBackground),\n        }}>\n        {foreground}\n      </View>\n    );\n  };\n\n  renderTabs = () => {\n    const {\n      tabs,\n      tabTextStyle,\n      tabTextActiveStyle,\n      tabTextContainerStyle,\n      tabTextContainerActiveStyle,\n      tabsContainerBackgroundColor,\n      tabWrapperStyle,\n      tabsContainerStyle,\n    } = this.props;\n    const { scrollValue, currentPage, containerWidth } = this.state;\n\n    const props = {\n      activeTab: currentPage,\n      containerWidth,\n      goToPage: this.goToPage,\n      scrollValue,\n      tabTextActiveStyle,\n      tabTextContainerActiveStyle,\n      tabTextContainerStyle,\n      tabTextStyle,\n      tabsContainerBackgroundColor,\n      tabs,\n      tabWrapperStyle,\n      tabsContainerStyle,\n    };\n\n    return <ScrollableTabBar {...props} />;\n  };\n\n  render() {\n    const {\n      backgroundImage,\n      children,\n      contentContainerStyles,\n      header,\n      headerHeight,\n      initialPage,\n      parallaxHeight,\n      tabs,\n      bounces,\n      scrollEvent,\n      keyboardShouldPersistTaps,\n      scrollRef,\n      refreshControl,\n    } = this.props;\n    const { currentPage, isFolded } = this.state;\n    const scrollHeight = Math.max(parallaxHeight, headerHeight * 2);\n    const headerStyle = header.props.style;\n    const isArray = Array.isArray(headerStyle);\n    const arrayHeaderStyle = {};\n    if (isArray) {\n      headerStyle.map((el) => Object.assign(arrayHeaderStyle, el));\n    }\n\n    const scrollViewMinHeight = Dimensions.get('window').height + parallaxHeight - headerHeight;\n    const innerScrollHeight = Dimensions.get('window').height - headerHeight - parallaxHeight;\n\n    const shouldRenderTabs = tabs && tabs.length > 0;\n    const shouldUseBgColor = contentContainerStyles && contentContainerStyles.backgroundColor;\n\n    return (\n      <View style={styles.container}>\n        {header && this.renderHeader()}\n        <AnimatedScrollView\n          bounces={bounces}\n          overScrollMode=\"never\"\n          refreshControl={refreshControl}\n          bouncesZoom\n          decelerationRate=\"fast\"\n          nestedScrollEnabled\n          ref={(c) => {\n            this.scroll = c;\n            setRef(scrollRef, c);\n          }}\n          contentContainerStyle={{\n            minHeight: scrollViewMinHeight,\n            backgroundColor: shouldUseBgColor,\n          }}\n          onScrollEndDrag={() => this.onScrollEndSnapToEdge(scrollHeight)}\n          scrollEventThrottle={1}\n          stickyHeaderIndices={shouldRenderTabs ? [1] : []}\n          showsVerticalScrollIndicator={false}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n          onScroll={event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    y: this.scrollY.y,\n                  },\n                },\n              },\n            ],\n            {\n              useNativeDriver: true,\n              listener: (e) => {\n                this.isCloseToBottom(e.nativeEvent);\n                this.isCloseToTop(e.nativeEvent);\n                scrollEvent(e);\n              },\n            }\n          )}>\n          <View style={{ height: parallaxHeight }} onLayout={(e) => this.onLayout(e)}>\n            <View\n              style={[\n                styles.overScrollPadding,\n                {\n                  backgroundColor: isArray\n                    ? arrayHeaderStyle.backgroundColor\n                    : headerStyle?.backgroundColor,\n                },\n              ]}\n            />\n            {backgroundImage\n              ? this.renderImageBackground(scrollHeight)\n              : this.renderPlainBackground(scrollHeight)}\n            {this.renderForeground(scrollHeight)}\n          </View>\n          {shouldRenderTabs && this.renderTabs()}\n          <ScrollableTabView\n            contentContainerStyles={contentContainerStyles}\n            initialPage={initialPage}\n            onChangeTab={(i) => this.onChangeTabHandler(i)}\n            tabs={tabs}\n            page={currentPage}\n            swipedPage={this.goToPage}\n            scrollRef={this.scroll}\n            scrollHeight={scrollHeight}\n            isHeaderFolded={isFolded}\n            minScrollHeight={innerScrollHeight}\n            keyboardShouldPersistTaps={keyboardShouldPersistTaps}>\n            {!tabs && children}\n            {tabs &&\n              tabs.map((item) => (\n                <View\n                  tabLabel={item.title}\n                  key={item.title}\n                  onLayout={this.setContentHeight}\n                  ref={(c) => {\n                    this.tab = c;\n                  }}>\n                  {item.content}\n                </View>\n              ))}\n          </ScrollableTabView>\n        </AnimatedScrollView>\n      </View>\n    );\n  }\n}\n\nStickyParallaxHeader.propTypes = {\n  background: node,\n  backgroundColor: string,\n  backgroundImage: Image.propTypes.source,\n  bounces: bool,\n  children: node,\n  contentContainerStyles: ViewPropTypes.style,\n  foreground: node,\n  header: node,\n  headerHeight: number,\n  headerSize: func.isRequired,\n  initialPage: number,\n  onChangeTab: func,\n  onEndReached: func,\n  parallaxHeight: number,\n  rememberTabScrollPosition: bool,\n  scrollEvent: func,\n  snapToEdge: bool,\n  tabTextActiveStyle: shape({}),\n  tabTextContainerActiveStyle: shape({}),\n  tabTextContainerStyle: shape({}),\n  tabTextStyle: shape({}),\n  tabs: ScrollableTabBar.propTypes.tabs,\n  tabsContainerBackgroundColor: string,\n  tabWrapperStyle: ViewPropTypes.style,\n  tabsContainerStyle: ViewPropTypes.style,\n  snapStartThreshold: oneOfType([bool, number]),\n  snapStopThreshold: oneOfType([bool, number]),\n  snapValue: oneOfType([bool, number]),\n  transparentHeader: bool,\n  onRef: func,\n  onTopReached: func,\n  scrollRef: oneOfType([func, shape({ current: instanceOf(ScrollView) })]),\n  keyboardShouldPersistTaps: oneOf(['never', 'always', 'handled', false, true, undefined]),\n  refreshControl: element,\n};\n\nStickyParallaxHeader.defaultProps = {\n  bounces: true,\n  contentContainerStyles: {},\n  headerHeight: 92,\n  backgroundColor: '',\n  initialPage: 0,\n  parallaxHeight: 0,\n  snapToEdge: true,\n  tabTextActiveStyle: {},\n  tabTextContainerActiveStyle: {},\n  tabTextContainerStyle: {},\n  tabTextStyle: {},\n  tabWrapperStyle: {},\n  rememberTabScrollPosition: false,\n  snapStartThreshold: false,\n  snapStopThreshold: false,\n  snapValue: false,\n  transparentHeader: false,\n  onRef: null,\n  scrollRef: null,\n  keyboardShouldPersistTaps: undefined,\n  refreshControl: undefined,\n};\n\nexport default StickyParallaxHeader;\n"]},"metadata":{},"sourceType":"module"}